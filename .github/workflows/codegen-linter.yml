name: codegen-linter
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    branches:
      - main
    paths:
      - ".github/workflows/codegen-linter.yml"
      - "services/migration/**/*.sql"
      - "schemas/graphql/**.graphql"
      - "schemas/openapi/**/*"
      - "schemas/proto/**/*"

jobs:
  codegen-linter:
    name: Codegen Linter
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: update checkout
        run: git fetch
        shell: bash

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            perspex:
              - "services/migration/src/perspex"
            proto:
              - "schemas/proto/**/*.proto"
            graphql_schema:
              - "schemas/graphql/schema/*.graphql"
            graphql_go:
              - "schemas/graphql/pkg/**/*.go"

      - name: Verify perspex generated code
        if: steps.filter.outputs.perspex == 'true'
        run: "bin/codegen-linter.sh -g schemas/perspex/pkg/models -t sqlboiler -l"

      - name: Verify proto generated code
        if: steps.filter.outputs.proto == 'true'
        run: bin/codegen-linter.sh -g schemas/proto/goproto -t proto -l

      - name: Verify graphql generated code
        if: |
          ( steps.filter.outputs.graphql_schema == 'true' && steps.filter.outputs.graphql_go != 'true' ) ||
          ( steps.filter.outputs.graphql_schema == 'true' && steps.filter.outputs.graphql_go == 'true' ) ||
          ( steps.filter.outputs.graphql_schema != 'true' && steps.filter.outputs.graphql_go == 'true' )
        run: bin/codegen-linter.sh -g schemas/graphql/pkg -t gqlgen -l


      # - name: Set environment variables
      #   id: set-environment-variables
      #   run: |
      #     echo "TILT_BACKEND_ENABLED=false" >> ${GITHUB_ENV}
      #     echo "TILT_MIGRATION_ENABLED=true" >> ${GITHUB_ENV}
      #     echo "TILT_REMOTE_CLUSTER=False" >> ${GITHUB_ENV}
      #     echo "TILT_BACKEND_IMAGE_TARGET=deployable" >> ${GITHUB_ENV}

      # - name: Run helm dependency update
      #   run: |
      #     bin/helm dependency update infrastructure/charts/perspex

      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.9.7'

      # - name: Spin up k3d cluster
      #   run: |
      #     bin/k3d cluster create -c infrastructure/tilt/k3d-config.yaml

      # - name: Do some yaml substitutions
      #   run: |
      #     bin/yq eval -i '.backend.enabled = "${TILT_BACKEND_ENABLED}"' infrastructure/tilt/values-dev.yaml

      # - name: Run tilt up
      #   run: |
      #     bin/tilt ci -f Tiltfile

