load("ext://restart_process", "docker_build_with_restart")

image_repo = os.getenv("TILT_IMAGE_REPO", default="registry.local:5000")

compile_cmd = "CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/backend ./cmd/backend/main.go"

local_resource(
  name="backend-generate-gql",
  cmd="bin/prepare.sh -rt",
  dir=".",
  deps=["./pkg", "./cmd/backend/main.go", "./bin/prepare.sh"],
  trigger_mode=TRIGGER_MODE_MANUAL,
  ignore=["./pkg/**/*"],
  labels=["backend"]
)

local_resource(
  name="backend-compile",
  cmd=compile_cmd,
  trigger_mode=TRIGGER_MODE_AUTO,
  deps=["./pkg", "./cmd/backend/main.go"],
  labels=["backend"],
  ignore=[
    "./pkg/graphql", 
    "./pkg/resolvers/generated",
    "./pkg/*/loader"
  ]
)

docker_build_with_restart(
  "{image_repo}/backend".format(image_repo=image_repo),
  context=".",
  dockerfile="Dockerfile",
  target="tilt",
  entrypoint=["/usr/local/bin/backend"],
  only=["./bin/backend"],
  live_update=[
    sync("./bin/backend", "/usr/local/bin/backend"),
  ]
)

k8s_resource(workload="perspex-backend", labels=["backend"], resource_deps=['postgresql'])
