scalar Time

enum Direction {
  FORWARD
  BACKWARD
}

# Used to transcribe Longitude & Latitude Coordinates.
type GeographicCoordinates {
  lng: Float!
  lat: Float!
}

# Information for paginating a given connection
type PageInfo {
    totalCount: Int!
    startCursor: ID!
    endCursor: ID!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

input PageArguments {
  # Only read the first `n` values of the set.
  first: Int
  # Read all values in the set after (below) this cursor.
  after: ID
  # Only read the last `n` values of the set.
  last: Int
  # Read all values in the set before (above) this cursor.
  before: ID
  test: Int
}


"""
Connection interface
"""

interface Connection {
  edges: [Edge!]
  pageInfo: PageInfo!
}

"""
Edges interface
"""

interface Edge {
  node: Node!
  cursor: ID!
}


"""
Node interface
"""

interface Node {
  id: ID!
}


type Query {
  nodeQuery: Node!
}

type Mutation {
  nodeMutation: Node!
}

type Subscription {
  nodeSubscription: Node!
}
