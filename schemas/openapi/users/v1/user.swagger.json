{
  "swagger": "2.0",
  "info": {
    "title": "users/v1/user.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/user": {
      "post": {
        "summary": "Register a user",
        "description": "This endpoint registers a user.",
        "operationId": "UserService_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Modify a user",
        "description": "This endpoint modifies a user.",
        "operationId": "UserService_ModifyUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ModifyUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "summary": "Retrieve a user by ID",
        "description": "This endpoint returns a user by ID via Query Params.",
        "operationId": "UserService_RetrieveUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RetrieveUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/user/{user.id}/delete": {
      "get": {
        "summary": "Soft-Delete a user by ID",
        "description": "This endpoint Soft-Deletes a user by ID via Query Params.",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "user.authId",
            "description": "Auth ID.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.email",
            "description": "User Email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.firstName",
            "description": "User First Name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.lastName",
            "description": "User Last Name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user.createdAt",
            "description": "User Creation Timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "user.updatedAt",
            "description": "User Updated Timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users": {
      "post": {
        "summary": "Retrieve a list of users by ID",
        "description": "This endpoint returns a list of users by IDs",
        "operationId": "UserService_RetrieveUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RetrieveUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "int64"
              },
              "description": "IDs of users to retrieve."
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/page": {
      "post": {
        "summary": "Retrieve a page of user IDs",
        "description": "This endpoint returns a user by ID via Query Params.",
        "operationId": "UserService_RetrieveUsersPage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RetrieveUsersPageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RetrieveUsersPageRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/page/direction/{direction}/first/{first}/after/{after}": {
      "get": {
        "summary": "Retrieve a page of user IDs",
        "description": "This endpoint returns a user by ID via Query Params.",
        "operationId": "UserService_RetrieveUsersPage2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RetrieveUsersPageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "direction",
            "description": "Direction of users to return.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "DIRECTION_FORWARD_UNSPECIFIED",
              "DIRECTION_FORWARD",
              "DIRECTION_BACKWARD"
            ]
          },
          {
            "name": "first",
            "description": "First number of users to return.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "After cursor for paginated users input.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "last",
            "description": "Last number of users to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "before",
            "description": "Before cursor for paginated users input.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/v1/users/page/direction/{direction}/last/{last}/before/{before}": {
      "get": {
        "summary": "Retrieve a page of user IDs",
        "description": "This endpoint returns a user by ID via Query Params.",
        "operationId": "UserService_RetrieveUsersPage3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RetrieveUsersPageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "direction",
            "description": "Direction of users to return.",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "DIRECTION_FORWARD_UNSPECIFIED",
              "DIRECTION_FORWARD",
              "DIRECTION_BACKWARD"
            ]
          },
          {
            "name": "last",
            "description": "Last number of users to return.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "before",
            "description": "Before cursor for paginated users input.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "first",
            "description": "First number of users to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "after",
            "description": "After cursor for paginated users input.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1DeleteUserResponse": {
      "type": "object",
      "example": {
        "id": "1",
        "authId": "auth:1234",
        "email": "johndoe@gmai.com",
        "first_name": "John",
        "last_name": "Doe"
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1Direction": {
      "type": "string",
      "enum": [
        "DIRECTION_FORWARD_UNSPECIFIED",
        "DIRECTION_FORWARD",
        "DIRECTION_BACKWARD"
      ],
      "default": "DIRECTION_FORWARD_UNSPECIFIED"
    },
    "v1ModifyUserResponse": {
      "type": "object",
      "example": {
        "id": "1",
        "authId": "auth:1234",
        "email": "johndoe@gmai.com",
        "first_name": "John",
        "last_name": "Doe"
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1RegisterUserResponse": {
      "type": "object",
      "example": {
        "id": "1",
        "authId": "auth:1234",
        "email": "johndoe@gmai.com",
        "first_name": "John",
        "last_name": "Doe"
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1RetrieveUserResponse": {
      "type": "object",
      "example": {
        "id": "1",
        "authId": "auth:1234",
        "email": "johndoe@gmai.com",
        "first_name": "John",
        "last_name": "Doe"
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1RetrieveUsersPageRequest": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string",
          "format": "int64",
          "description": "First number of users to return."
        },
        "after": {
          "type": "string",
          "format": "int64",
          "description": "After cursor for paginated users input."
        },
        "last": {
          "type": "string",
          "format": "int64",
          "description": "Last number of users to return."
        },
        "before": {
          "type": "string",
          "format": "int64",
          "description": "Before cursor for paginated users input."
        },
        "direction": {
          "$ref": "#/definitions/v1Direction",
          "description": "Direction of users to return."
        }
      }
    },
    "v1RetrieveUsersPageResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of users returned by paginated input."
        },
        "startCursor": {
          "type": "string",
          "format": "int64",
          "description": "Start cursor for paginated users input."
        },
        "endCursor": {
          "type": "string",
          "format": "int64",
          "description": "End cursor for paginated users input."
        },
        "hasNextPage": {
          "type": "boolean",
          "description": "Indicates if there is a next page of users."
        },
        "hasPreviousPage": {
          "type": "boolean",
          "description": "Indicates if there is a previous page of users."
        }
      }
    },
    "v1RetrieveUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          },
          "description": "Users."
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID."
        },
        "authId": {
          "type": "string",
          "description": "Auth ID."
        },
        "email": {
          "type": "string",
          "description": "User Email"
        },
        "firstName": {
          "type": "string",
          "description": "User First Name"
        },
        "lastName": {
          "type": "string",
          "description": "User Last Name"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "User Creation Timestamp"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "User Updated Timestamp"
        }
      }
    }
  },
  "externalDocs": {
    "description": "pespex",
    "url": "https://github.com/jmandel1027/perspex"
  }
}
